@using System.Text.RegularExpressions
@{
    Layout = "~/_Layout.cshtml";
    var username = "";
    var password = "";
    var confirmPassword = "";
    var errorMessage = "";
   
    

    if(!IsPost){
        if(WebSecurity.IsAuthenticated){
            errorMessage = String.Format("You are already logged in. (User name: {0})", WebSecurity.CurrentUserName);
        }
    }
   
    
    if(IsPost){
        WebSecurity.Logout();
      
        username = Request["username"];
        password = Request["password"];
        confirmPassword = Request["confirmPassword"];
        var regexItem = new Regex("^[a-zA-Z0-9 ]*$");

        if(!username.Contains("@nhl.nl"))
        {
            errorMessage = "Your username needs to be a valid student email adress (@nhl.nl)";
        }
        else if(password.Length < 8)
        {
            errorMessage = "Your password needs to have atleast 8 characters.";
        }
        else if(!password.Any(c => char.IsUpper(c)))
        {
            errorMessage = "Your password needs to have atleast 1 upper case letter.";
        }
        else if(!password.Any(c => char.IsLower(c)))
        {
            errorMessage = "Your password needs to have atleast 1 lower case letter";
        }
        else if(regexItem.IsMatch(password))
        {
            errorMessage = "Your password needs to have atleast one special character (/*-+_@&$#%)";
        }
        else if(password != confirmPassword)
        {
            errorMessage = "Passwords don't match.";
        }
        else 
        {
            if(WebSecurity.UserExists(username))
            {
                errorMessage = String.Format("User '{0}' already exists.", username);
            }
            else
            {
                WebSecurity.CreateUserAndAccount(username,password,null,false);
                WebSecurity.Login(username, password, true);
                errorMessage = String.Format("{0} created.", username);
                Response.Redirect("~/Default");
            }
        }
    }
}

<h1>Register</h1>
<form method="post">
    <p>
        @if(errorMessage != ""){
            <span class="errorMessage">@Html.Raw(errorMessage)</span>
        }
    </p>
 
    <p>
        <label for="username">Username (email):</label><br/>
        <input type="text" name="username" id="username" value='@Request["username"]' />
    </p>
    <p>
        <label for="password">Password:</label><br/>
        <input type="password" name="password" id="password" value="" />
    </p>   
    <p>
        <label for="confirmPassword">Confirm password:</label><br/>
        <input type="password" name="confirmPassword" id="confirmPassword" value="" />
    </p>   
 
    <p>
        <input type="submit" value="Submit" />
    </p>   
    <p>
        <a href="@Href("~/Logout")">Log out</a>
        <br/>
        <a href="@Href("~/Default")">Home</a>
    </p>
</form>
